
import { writeFileSync, readdirSync } from 'node:fs';

const outputFileName: string = 'importDay.ts';
const preamble: string = `// This code was generated by \`src/scripts/srcgen.ts\`. Do not modify.`;

function getSwitchCases() {
    const wantedFileRegex = /^day[0-9][0-9]\.rs$/;
    return readdirSync(`${import.meta.dirname}/../../aoc_2025/src/solution/`)
        .filter(file => wantedFileRegex.test(file))
        .map(file => file.substring(0, file.length - 3))
        .map(file => `        case ${parseInt(file.substring(3))}: part1 = solution.${file}_part1; part2 = solution.${file}_part2; break;`)
        .join("\n")
}

function generateCode(): string {
    return generatedCode;
}

const generatedCode: string = `
${preamble}

import init from 'aoc_2025/pkg/aoc_2025';
import * as solution from 'aoc_2025/pkg/aoc_2025';

export function getDaySolution(day: number) {
    let part1, part2;
    switch (day) {
${getSwitchCases()}
    }
    return { part1: part1, part2: part2, init: init }
}
`

export default {
    name: 'srcgen',
    hooks: {
        //@ts-ignore
        'astro:config:setup': ({ createCodegenDir }) => {
            const srcgenDir = createCodegenDir();
            writeFileSync(new URL(outputFileName, srcgenDir), generateCode(), 'utf-8')
        }
    }
}
